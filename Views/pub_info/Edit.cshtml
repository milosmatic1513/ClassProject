@model ClassProject.Models.pub_info

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "pub_info", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>pub_info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.pub_id)

        <div class="form-group">
            @Html.LabelFor(model => model.logo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string imageSrc;
                    if (Model.logo == null)
                    {
                        imageSrc = "";
                    }
                    else
                    {
                        var imageBase64 = Convert.ToBase64String(Model.logo);
                        imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                    }

                    <input type="file" name="imageFile" onchange="previewFile()">
                    <img src="@imageSrc" style="max-width: 250px; max-height: 250px; width: auto; height: auto;" alt="No Image" />
                }
                @Html.ValidationMessageFor(model => model.logo, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.logo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pr_info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pr_info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pr_info, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" value="edit" name="editMode" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function previewFile() {
        const preview = document.querySelector('img');
        const file = document.querySelector('input[type=file]').files[0];
        const reader = new FileReader();

        reader.addEventListener("load", function () {
            // convert image file to base64 string
            preview.src = reader.result;
        }, false);

        if (file) {
            reader.readAsDataURL(file);
        }
    }
</script>